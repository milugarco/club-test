/* tslint:disable */
/* eslint-disable */
/**
 * Invicta API DEV
 * Utilize essa documentação para realizar integração com o nosso sistema
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateDocumentParticipantDto
 */
export interface CreateDocumentParticipantDto {
    /**
     * Número do documento
     * @type {string}
     * @memberof CreateDocumentParticipantDto
     */
    number: string;
    /**
     * Tipo do documento
     * @type {string}
     * @memberof CreateDocumentParticipantDto
     */
    type: string;
    /**
     * Path do documento no computador
     * @type {string}
     * @memberof CreateDocumentParticipantDto
     */
    filePath: string;
    /**
     * 
     * @type {string}
     * @memberof CreateDocumentParticipantDto
     */
    status: CreateDocumentParticipantDtoStatusEnum;
    /**
     * Data e hora da criação do documento
     * @type {Date}
     * @memberof CreateDocumentParticipantDto
     */
    createdAt: Date;
    /**
     * Data e hora da última atualização no documento
     * @type {Date}
     * @memberof CreateDocumentParticipantDto
     */
    updatedAt: Date;
    /**
     * Data e hora da exclusão do documento
     * @type {Date}
     * @memberof CreateDocumentParticipantDto
     */
    deletedAt: Date;
}


/**
 * @export
 */
export const CreateDocumentParticipantDtoStatusEnum = {
    Sent: 'SENT',
    AwaitingVerification: 'AWAITING_VERIFICATION',
    Verified: 'VERIFIED'
} as const;
export type CreateDocumentParticipantDtoStatusEnum = typeof CreateDocumentParticipantDtoStatusEnum[keyof typeof CreateDocumentParticipantDtoStatusEnum];


/**
 * Check if a given object implements the CreateDocumentParticipantDto interface.
 */
export function instanceOfCreateDocumentParticipantDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "number" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "filePath" in value;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;
    isInstance = isInstance && "deletedAt" in value;

    return isInstance;
}

export function CreateDocumentParticipantDtoFromJSON(json: any): CreateDocumentParticipantDto {
    return CreateDocumentParticipantDtoFromJSONTyped(json, false);
}

export function CreateDocumentParticipantDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateDocumentParticipantDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'number': json['number'],
        'type': json['type'],
        'filePath': json['filePath'],
        'status': json['status'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
        'deletedAt': (new Date(json['deletedAt'])),
    };
}

export function CreateDocumentParticipantDtoToJSON(value?: CreateDocumentParticipantDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'number': value.number,
        'type': value.type,
        'filePath': value.filePath,
        'status': value.status,
        'createdAt': (value.createdAt.toISOString()),
        'updatedAt': (value.updatedAt.toISOString()),
        'deletedAt': (value.deletedAt.toISOString()),
    };
}

