/* tslint:disable */
/* eslint-disable */
/**
 * Invicta API DEV
 * Utilize essa documentação para realizar integração com o nosso sistema
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateEventParticipantDto
 */
export interface CreateEventParticipantDto {
    /**
     * ID do evento associado ao participante (UUID)
     * @type {string}
     * @memberof CreateEventParticipantDto
     */
    eventId: string;
    /**
     * ID do ingresso associada ao participante (UUID)
     * @type {string}
     * @memberof CreateEventParticipantDto
     */
    eventTicketId: string;
    /**
     * ID do usuário associado ao participante
     * @type {string}
     * @memberof CreateEventParticipantDto
     */
    userId: string;
    /**
     * 
     * @type {string}
     * @memberof CreateEventParticipantDto
     */
    status: CreateEventParticipantDtoStatusEnum;
}


/**
 * @export
 */
export const CreateEventParticipantDtoStatusEnum = {
    AwaitingPayment: 'AWAITING_PAYMENT',
    CheckInEarly: 'CHECK_IN_EARLY',
    CheckIn: 'CHECK_IN',
    CheckOut: 'CHECK_OUT',
    Canceled: 'CANCELED',
    Enable: 'ENABLE'
} as const;
export type CreateEventParticipantDtoStatusEnum = typeof CreateEventParticipantDtoStatusEnum[keyof typeof CreateEventParticipantDtoStatusEnum];


/**
 * Check if a given object implements the CreateEventParticipantDto interface.
 */
export function instanceOfCreateEventParticipantDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "eventId" in value;
    isInstance = isInstance && "eventTicketId" in value;
    isInstance = isInstance && "userId" in value;
    isInstance = isInstance && "status" in value;

    return isInstance;
}

export function CreateEventParticipantDtoFromJSON(json: any): CreateEventParticipantDto {
    return CreateEventParticipantDtoFromJSONTyped(json, false);
}

export function CreateEventParticipantDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateEventParticipantDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'eventId': json['eventId'],
        'eventTicketId': json['eventTicketId'],
        'userId': json['userId'],
        'status': json['status'],
    };
}

export function CreateEventParticipantDtoToJSON(value?: CreateEventParticipantDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'eventId': value.eventId,
        'eventTicketId': value.eventTicketId,
        'userId': value.userId,
        'status': value.status,
    };
}

