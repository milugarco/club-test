/* tslint:disable */
/* eslint-disable */
/**
 * Invicta API DEV
 * Utilize essa documentação para realizar integração com o nosso sistema
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateUserDocumentDto
 */
export interface CreateUserDocumentDto {
    /**
     * ID do usuário (UUID)
     * @type {string}
     * @memberof CreateUserDocumentDto
     */
    userId: string;
    /**
     * ID do documento (UUID)
     * @type {string}
     * @memberof CreateUserDocumentDto
     */
    documentId: string;
    /**
     * Indica se está ativo
     * @type {boolean}
     * @memberof CreateUserDocumentDto
     */
    isActive: boolean;
    /**
     * URL da foto
     * @type {string}
     * @memberof CreateUserDocumentDto
     */
    photo: string;
}

/**
 * Check if a given object implements the CreateUserDocumentDto interface.
 */
export function instanceOfCreateUserDocumentDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "userId" in value;
    isInstance = isInstance && "documentId" in value;
    isInstance = isInstance && "isActive" in value;
    isInstance = isInstance && "photo" in value;

    return isInstance;
}

export function CreateUserDocumentDtoFromJSON(json: any): CreateUserDocumentDto {
    return CreateUserDocumentDtoFromJSONTyped(json, false);
}

export function CreateUserDocumentDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateUserDocumentDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'userId': json['userId'],
        'documentId': json['documentId'],
        'isActive': json['isActive'],
        'photo': json['photo'],
    };
}

export function CreateUserDocumentDtoToJSON(value?: CreateUserDocumentDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'userId': value.userId,
        'documentId': value.documentId,
        'isActive': value.isActive,
        'photo': value.photo,
    };
}

