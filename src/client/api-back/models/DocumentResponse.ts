/* tslint:disable */
/* eslint-disable */
/**
 * Invicta API DEV
 * Utilize essa documentação para realizar integração com o nosso sistema
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UserDocumentResponseDto } from './UserDocumentResponseDto';
import {
    UserDocumentResponseDtoFromJSON,
    UserDocumentResponseDtoFromJSONTyped,
    UserDocumentResponseDtoToJSON,
} from './UserDocumentResponseDto';

/**
 * 
 * @export
 * @interface DocumentResponse
 */
export interface DocumentResponse {
    /**
     * ID do documento (UUID)
     * @type {string}
     * @memberof DocumentResponse
     */
    id?: string;
    /**
     * Número do documento
     * @type {string}
     * @memberof DocumentResponse
     */
    number?: string;
    /**
     * Tipo do documento
     * @type {string}
     * @memberof DocumentResponse
     */
    type?: string;
    /**
     * Path do documento no computador
     * @type {string}
     * @memberof DocumentResponse
     */
    filePath?: string;
    /**
     * 
     * @type {string}
     * @memberof DocumentResponse
     */
    status?: DocumentResponseStatusEnum;
    /**
     * Data e hora da criação do documento
     * @type {Date}
     * @memberof DocumentResponse
     */
    createdAt?: Date;
    /**
     * Data e hora da última atualização no documento
     * @type {Date}
     * @memberof DocumentResponse
     */
    updatedAt?: Date;
    /**
     * Data e hora da exclusão do documento
     * @type {Date}
     * @memberof DocumentResponse
     */
    deletedAt?: Date;
    /**
     * 
     * @type {UserDocumentResponseDto}
     * @memberof DocumentResponse
     */
    userDocument?: UserDocumentResponseDto;
}


/**
 * @export
 */
export const DocumentResponseStatusEnum = {
    Sent: 'SENT',
    AwaitingVerification: 'AWAITING_VERIFICATION',
    Verified: 'VERIFIED'
} as const;
export type DocumentResponseStatusEnum = typeof DocumentResponseStatusEnum[keyof typeof DocumentResponseStatusEnum];


/**
 * Check if a given object implements the DocumentResponse interface.
 */
export function instanceOfDocumentResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DocumentResponseFromJSON(json: any): DocumentResponse {
    return DocumentResponseFromJSONTyped(json, false);
}

export function DocumentResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DocumentResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'number': !exists(json, 'number') ? undefined : json['number'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'filePath': !exists(json, 'filePath') ? undefined : json['filePath'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
        'deletedAt': !exists(json, 'deletedAt') ? undefined : (new Date(json['deletedAt'])),
        'userDocument': !exists(json, 'userDocument') ? undefined : UserDocumentResponseDtoFromJSON(json['userDocument']),
    };
}

export function DocumentResponseToJSON(value?: DocumentResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'number': value.number,
        'type': value.type,
        'filePath': value.filePath,
        'status': value.status,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'deletedAt': value.deletedAt === undefined ? undefined : (value.deletedAt.toISOString()),
        'userDocument': UserDocumentResponseDtoToJSON(value.userDocument),
    };
}

