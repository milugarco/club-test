/* tslint:disable */
/* eslint-disable */
/**
 * Invicta API DEV
 * Utilize essa documentação para realizar integração com o nosso sistema
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EventTicketGuestResponse
 */
export interface EventTicketGuestResponse {
    /**
     * ID da URL ticket evento (UUID)
     * @type {string}
     * @memberof EventTicketGuestResponse
     */
    id?: string;
    /**
     * ID da URL ticket evento (UUID)
     * @type {string}
     * @memberof EventTicketGuestResponse
     */
    eventId?: string;
    /**
     * ID da URL ticket evento (UUID)
     * @type {string}
     * @memberof EventTicketGuestResponse
     */
    eventTicketId?: string;
    /**
     * Data de criação
     * @type {Date}
     * @memberof EventTicketGuestResponse
     */
    createdAt?: Date;
    /**
     * Data de atualização
     * @type {Date}
     * @memberof EventTicketGuestResponse
     */
    updatedAt?: Date;
    /**
     * Data de exclusão (se aplicável)
     * @type {Date}
     * @memberof EventTicketGuestResponse
     */
    deletedAt?: Date;
}

/**
 * Check if a given object implements the EventTicketGuestResponse interface.
 */
export function instanceOfEventTicketGuestResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function EventTicketGuestResponseFromJSON(json: any): EventTicketGuestResponse {
    return EventTicketGuestResponseFromJSONTyped(json, false);
}

export function EventTicketGuestResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): EventTicketGuestResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'eventId': !exists(json, 'eventId') ? undefined : json['eventId'],
        'eventTicketId': !exists(json, 'eventTicketId') ? undefined : json['eventTicketId'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
        'deletedAt': !exists(json, 'deletedAt') ? undefined : (new Date(json['deletedAt'])),
    };
}

export function EventTicketGuestResponseToJSON(value?: EventTicketGuestResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'eventId': value.eventId,
        'eventTicketId': value.eventTicketId,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'deletedAt': value.deletedAt === undefined ? undefined : (value.deletedAt.toISOString()),
    };
}

