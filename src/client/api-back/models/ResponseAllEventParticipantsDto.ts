/* tslint:disable */
/* eslint-disable */
/**
 * Invicta API DEV
 * Utilize essa documentação para realizar integração com o nosso sistema
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ResponseAllEventParticipantsDto
 */
export interface ResponseAllEventParticipantsDto {
    /**
     * ID do participante (UUID)
     * @type {string}
     * @memberof ResponseAllEventParticipantsDto
     */
    id: string;
    /**
     * Nome do participante
     * @type {string}
     * @memberof ResponseAllEventParticipantsDto
     */
    userName: string;
    /**
     * ID do evento associado ao participante (UUID)
     * @type {string}
     * @memberof ResponseAllEventParticipantsDto
     */
    eventId: string;
    /**
     * Nome do ingresso
     * @type {string}
     * @memberof ResponseAllEventParticipantsDto
     */
    ticketName: string;
    /**
     * QRcode do participante
     * @type {string}
     * @memberof ResponseAllEventParticipantsDto
     */
    qrCode: string;
    /**
     * photo path in aws
     * @type {string}
     * @memberof ResponseAllEventParticipantsDto
     */
    path: string;
}

/**
 * Check if a given object implements the ResponseAllEventParticipantsDto interface.
 */
export function instanceOfResponseAllEventParticipantsDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "userName" in value;
    isInstance = isInstance && "eventId" in value;
    isInstance = isInstance && "ticketName" in value;
    isInstance = isInstance && "qrCode" in value;
    isInstance = isInstance && "path" in value;

    return isInstance;
}

export function ResponseAllEventParticipantsDtoFromJSON(json: any): ResponseAllEventParticipantsDto {
    return ResponseAllEventParticipantsDtoFromJSONTyped(json, false);
}

export function ResponseAllEventParticipantsDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResponseAllEventParticipantsDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'userName': json['userName'],
        'eventId': json['eventId'],
        'ticketName': json['ticketName'],
        'qrCode': json['qrCode'],
        'path': json['path'],
    };
}

export function ResponseAllEventParticipantsDtoToJSON(value?: ResponseAllEventParticipantsDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'userName': value.userName,
        'eventId': value.eventId,
        'ticketName': value.ticketName,
        'qrCode': value.qrCode,
        'path': value.path,
    };
}

