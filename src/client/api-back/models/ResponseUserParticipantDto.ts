/* tslint:disable */
/* eslint-disable */
/**
 * Invicta API DEV
 * Utilize essa documentação para realizar integração com o nosso sistema
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ResponseDocumentDto } from './ResponseDocumentDto';
import {
    ResponseDocumentDtoFromJSON,
    ResponseDocumentDtoFromJSONTyped,
    ResponseDocumentDtoToJSON,
} from './ResponseDocumentDto';

/**
 * 
 * @export
 * @interface ResponseUserParticipantDto
 */
export interface ResponseUserParticipantDto {
    /**
     * 
     * @type {string}
     * @memberof ResponseUserParticipantDto
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof ResponseUserParticipantDto
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof ResponseUserParticipantDto
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof ResponseUserParticipantDto
     */
    photo?: string;
    /**
     * 
     * @type {Array<ResponseDocumentDto>}
     * @memberof ResponseUserParticipantDto
     */
    document: Array<ResponseDocumentDto>;
}

/**
 * Check if a given object implements the ResponseUserParticipantDto interface.
 */
export function instanceOfResponseUserParticipantDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "document" in value;

    return isInstance;
}

export function ResponseUserParticipantDtoFromJSON(json: any): ResponseUserParticipantDto {
    return ResponseUserParticipantDtoFromJSONTyped(json, false);
}

export function ResponseUserParticipantDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResponseUserParticipantDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'email': json['email'],
        'photo': !exists(json, 'photo') ? undefined : json['photo'],
        'document': ((json['document'] as Array<any>).map(ResponseDocumentDtoFromJSON)),
    };
}

export function ResponseUserParticipantDtoToJSON(value?: ResponseUserParticipantDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'email': value.email,
        'photo': value.photo,
        'document': ((value.document as Array<any>).map(ResponseDocumentDtoToJSON)),
    };
}

